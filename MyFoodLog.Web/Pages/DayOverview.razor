@page "/DayOverview"
@using MyFoodLog.Web.API.Client.Interfaces
@using MyFoodLog.Web.Components

<style>
    table.mdc-data-table__table {
        white-space: normal;!important;
        width: 100%;
    }
</style>

<div class="mdc-layout-grid__cell--span-3-desktop mdc-layout-grid__cell--span-2-tablet"></div>
<div class="mdc-layout-grid__cell--span-6-desktop mdc-layout-grid__cell--span-4-tablet mdc-layout-grid__cell--span-4-phone">
    <div class="mdc-layout-grid__inner">

        <div class="mdc-layout-grid__cell--span-12">
            <h3 class="mdc-typography--headline6">Day Overview</h3>
        </div>

        @foreach (MealDto meal in Meals)
        {
            <MealOverviewComponent Meal="meal" /> 
        }

    </div>
</div>
<div class="mdc-layout-grid__cell--span-3-desktop mdc-layout-grid__cell--span-2-tablet"></div>

@code {

    [Inject]
    private IMyFoodLogApi? FoodLogApi { get; set; }

    [Inject]
    private IMBToastService? ToastService { get; set; }

    private List<MealDto> Meals { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await GetDayOverview();

        await base.OnInitializedAsync();
    }

    private async Task GetDayOverview(CancellationToken ctx = default)
    {
        try
        {
            if (FoodLogApi != null)
            {
                Meals = (await FoodLogApi.Meal_GetMealsAsync("1", ctx)).ToList();
            }
        }
        catch (ApiException)
        {
        }
    }

    private async Task DayItemsModified()
    {
        await GetDayOverview();

        await InvokeAsync(StateHasChanged);
    }

}